# Stacker Package Configuration for Access
# This allows Access to be installed via: stacker add gh:akaoio/access

name: "access"
version: "0.0.3"
description: "Pure shell DNS synchronization - The eternal foundation layer"
template: "service"
repository: "https://github.com/akaoio/access"
main_script: "access.sh"

# Stacker compatibility
dependencies:
  stacker: "optional"  # Works with or without Stacker

# Package metadata
author: "AKAO Team"
license: "MIT"
homepage: "https://github.com/akaoio/access"

# Installation configuration
install:
  binary: "access"
  service_name: "access"
  service_description: "Access DNS Synchronization Service"
  
# Capabilities when used as Stacker package
provides:
  - dns-sync
  - ip-detection
  - multi-provider
  - watchdog

# Features that can be enhanced by Stacker
enhances:
  - service-management  # Better with Stacker's service module
  - configuration      # Better with Stacker's config module
  - health-monitoring  # Better with Stacker's health module
  - installation      # Better with Stacker's install module

# Standalone operation
standalone:
  supported: true
  requirements:
    - sh
    - curl
    - dig
    
# Integration modes
modes:
  standalone:
    description: "Fully functional without Stacker"
    features:
      - basic-service
      - json-config
      - manual-install
  
  enhanced:
    description: "Enhanced features when Stacker is available"
    features:
      - advanced-service
      - unified-config
      - package-management
      - modular-architecture
  
  integrated:
    description: "Full integration as Stacker package"
    features:
      - all-stacker-features
      - automatic-updates
      - dependency-management

# Commands exposed
commands:
  - name: "access"
    description: "Main Access CLI"
    standalone: true
    
  - name: "access-watchdog"
    description: "DNS sync watchdog daemon"
    standalone: true
    
# Hooks for Stacker package manager
hooks:
  post_install: |
    echo "Access installed successfully!"
    echo "Run 'access config <provider>' to configure"
    
  pre_update: |
    # Backup current configuration
    [ -f "$HOME/.config/access/config.json" ] && \
      cp "$HOME/.config/access/config.json" "$HOME/.config/access/config.json.backup"
    
  post_update: |
    echo "Access updated successfully!"
    [ -f "$HOME/.config/access/config.json.backup" ] && \
      echo "Configuration backup saved at: ~/.config/access/config.json.backup"